[2024-03-07 13:16:43] [main] [INFO] [] [com.example.discoveryserver.DiscoveryServerApplication] - Starting DiscoveryServerApplication using Java 17.0.8 with PID 9948 (C:\Users\DCL\IdeaProjects\elp-project-backend\discovery-server\build\classes\java\main started by DCL in C:\Users\DCL\IdeaProjects\elp-project-backend)
[2024-03-07 13:16:43] [main] [INFO] [] [com.example.discoveryserver.DiscoveryServerApplication] - No active profile set, falling back to 1 default profile: "default"
[2024-03-07 13:16:46] [main] [INFO] [] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=d5270afc-0383-382b-a13c-5baba4283f7a
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$615/0x00000294853d97b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:16:46] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:16:47] [main] [INFO] [] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port 8761 (http)
[2024-03-07 13:16:47] [main] [INFO] [] [org.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8761"]
[2024-03-07 13:16:47] [main] [INFO] [] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
[2024-03-07 13:16:47] [main] [INFO] [] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/10.1.19]
[2024-03-07 13:16:47] [main] [INFO] [] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
[2024-03-07 13:16:47] [main] [INFO] [] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 3669 ms
[2024-03-07 13:16:49] [main] [INFO] [] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
[2024-03-07 13:16:49] [main] [INFO] [] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
[2024-03-07 13:16:50] [main] [INFO] [] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
[2024-03-07 13:16:50] [main] [INFO] [] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
[2024-03-07 13:16:55] [main] [INFO] [] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
[2024-03-07 13:16:56] [main] [INFO] [] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 1 endpoint(s) beneath base path '/actuator'
[2024-03-07 13:16:56] [main] [INFO] [] [org.springframework.security.web.DefaultSecurityFilterChain] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@47d0195b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6de2344a, org.springframework.security.web.context.SecurityContextHolderFilter@42d96745, org.springframework.security.web.header.HeaderWriterFilter@3dcf6026, org.springframework.web.filter.CorsFilter@577dac16, org.springframework.security.web.csrf.CsrfFilter@192aeae2, org.springframework.security.web.authentication.logout.LogoutFilter@6fc1a1d5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@61e34bec, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5e1e19af, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@18ed9480, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3e729d46, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@9e4388d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@28532753, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5fb05c07, org.springframework.security.web.access.ExceptionTranslationFilter@4cddc3d9, org.springframework.security.web.access.intercept.AuthorizationFilter@c2191a8]
[2024-03-07 13:16:58] [main] [INFO] [] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
[2024-03-07 13:16:58] [main] [WARN] [] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[2024-03-07 13:16:58] [main] [INFO] [] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
[2024-03-07 13:16:58] [main] [INFO] [] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
[2024-03-07 13:16:58] [main] [INFO] [] [com.netflix.discovery.DiscoveryClient] - Client configured to neither register nor query for data.
[2024-03-07 13:16:58] [main] [INFO] [] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1709795818527 with initial instances count: 0
[2024-03-07 13:16:58] [main] [INFO] [] [com.netflix.eureka.DefaultEurekaServerContext] - Initializing ...
[2024-03-07 13:16:58] [main] [WARN] [] [com.netflix.eureka.cluster.PeerEurekaNodes] - The replica size seems to be empty. Check the route 53 DNS Registry
[2024-03-07 13:16:58] [main] [INFO] [] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Finished initializing remote region registries. All known remote regions: []
[2024-03-07 13:16:58] [main] [INFO] [] [com.netflix.eureka.DefaultEurekaServerContext] - Initialized
[2024-03-07 13:16:58] [main] [INFO] [] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application UNKNOWN with eureka with status UP
[2024-03-07 13:16:58] [main] [INFO] [] [org.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8761"]
[2024-03-07 13:16:58] [Thread-9] [INFO] [] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - isAws returned false
[2024-03-07 13:16:58] [Thread-9] [INFO] [] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Initialized server context
[2024-03-07 13:16:58] [Thread-9] [INFO] [] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Got 1 instances from neighboring DS node
[2024-03-07 13:16:58] [Thread-9] [INFO] [] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Renew threshold is: 1
[2024-03-07 13:16:58] [Thread-9] [INFO] [] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Changing status to UP
[2024-03-07 13:16:58] [Thread-9] [INFO] [] [org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration] - Started Eureka Server
[2024-03-07 13:16:58] [main] [INFO] [] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port 8761 (http) with context path ''
[2024-03-07 13:16:58] [main] [INFO] [] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 8761
[2024-03-07 13:17:00] [main] [INFO] [] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
[2024-03-07 13:17:00] [main] [INFO] [] [com.example.discoveryserver.DiscoveryServerApplication] - Started DiscoveryServerApplication in 18.974 seconds (process running for 21.165)
[2024-03-07 13:17:16] [SpringApplicationShutdownHook] [INFO] [] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Unregistering application UNKNOWN with eureka with status DOWN
[2024-03-07 13:17:16] [SpringApplicationShutdownHook] [INFO] [] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Shutting down Eureka Server..
[2024-03-07 13:17:17] [SpringApplicationShutdownHook] [INFO] [] [com.netflix.eureka.DefaultEurekaServerContext] - Shutting down ...
[2024-03-07 13:17:17] [SpringApplicationShutdownHook] [INFO] [] [com.netflix.eureka.DefaultEurekaServerContext] - Shut down
[2024-03-07 13:17:17] [SpringApplicationShutdownHook] [INFO] [] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Eureka Service is now shutdown...
[2024-03-07 13:17:17] [SpringApplicationShutdownHook] [INFO] [] [com.netflix.eureka.DefaultEurekaServerContext] - Shutting down ...
[2024-03-07 13:17:17] [SpringApplicationShutdownHook] [INFO] [] [com.netflix.eureka.DefaultEurekaServerContext] - Shut down
[2024-03-07 13:17:17] [SpringApplicationShutdownHook] [INFO] [] [com.netflix.discovery.DiscoveryClient] - Shutting down DiscoveryClient ...
[2024-03-07 13:17:17] [SpringApplicationShutdownHook] [INFO] [] [com.netflix.discovery.DiscoveryClient] - Completed shut down of DiscoveryClient
[2024-03-07 13:19:17] [main] [INFO] [] [com.example.discoveryserver.DiscoveryServerApplication] - Starting DiscoveryServerApplication using Java 17.0.8 with PID 13480 (C:\Users\DCL\IdeaProjects\elp-project-backend\discovery-server\build\classes\java\main started by DCL in C:\Users\DCL\IdeaProjects\elp-project-backend)
[2024-03-07 13:19:17] [main] [INFO] [] [com.example.discoveryserver.DiscoveryServerApplication] - No active profile set, falling back to 1 default profile: "default"
[2024-03-07 13:19:19] [main] [INFO] [] [org.springframework.cloud.context.scope.GenericScope] - BeanFactory id=d5270afc-0383-382b-a13c-5baba4283f7a
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$627/0x00000203ab3f8c58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:19:20] [main] [WARN] [] [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[2024-03-07 13:19:20] [main] [INFO] [] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port 8761 (http)
[2024-03-07 13:19:20] [main] [INFO] [] [org.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-8761"]
[2024-03-07 13:19:20] [main] [INFO] [] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
[2024-03-07 13:19:20] [main] [INFO] [] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/10.1.19]
[2024-03-07 13:19:20] [main] [INFO] [] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
[2024-03-07 13:19:20] [main] [INFO] [] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 3058 ms
[2024-03-07 13:19:22] [main] [INFO] [] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON encoding codec LegacyJacksonJson
[2024-03-07 13:19:22] [main] [INFO] [] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using JSON decoding codec LegacyJacksonJson
[2024-03-07 13:19:22] [main] [INFO] [] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML encoding codec XStreamXml
[2024-03-07 13:19:22] [main] [INFO] [] [com.netflix.discovery.provider.DiscoveryJerseyProvider] - Using XML decoding codec XStreamXml
[2024-03-07 13:19:24] [main] [INFO] [] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
[2024-03-07 13:19:25] [main] [INFO] [] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] - Exposing 1 endpoint(s) beneath base path '/actuator'
[2024-03-07 13:19:25] [main] [INFO] [] [org.springframework.security.web.DefaultSecurityFilterChain] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@e7ddf8d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@47f8374, org.springframework.security.web.context.SecurityContextHolderFilter@247415be, org.springframework.security.web.header.HeaderWriterFilter@4125bc3c, org.springframework.web.filter.CorsFilter@22a8e87b, org.springframework.security.web.csrf.CsrfFilter@e280006, org.springframework.security.web.authentication.logout.LogoutFilter@2c485b3a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@58267ba1, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4fe3199d, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@b8c6406, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@34e7cde3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43735ea0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@535aa7c7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6bed434d, org.springframework.security.web.access.ExceptionTranslationFilter@fbdba1c, org.springframework.security.web.access.intercept.AuthorizationFilter@1c0a143]
[2024-03-07 13:19:27] [main] [INFO] [] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
[2024-03-07 13:19:27] [main] [WARN] [] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[2024-03-07 13:19:27] [main] [INFO] [] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] - Setting initial instance status as: STARTING
[2024-03-07 13:19:27] [main] [INFO] [] [com.netflix.discovery.DiscoveryClient] - Initializing Eureka in region us-east-1
[2024-03-07 13:19:27] [main] [INFO] [] [com.netflix.discovery.DiscoveryClient] - Client configured to neither register nor query for data.
[2024-03-07 13:19:27] [main] [INFO] [] [com.netflix.discovery.DiscoveryClient] - Discovery Client initialized at timestamp 1709795967356 with initial instances count: 0
[2024-03-07 13:19:27] [main] [INFO] [] [com.netflix.eureka.DefaultEurekaServerContext] - Initializing ...
[2024-03-07 13:19:27] [main] [WARN] [] [com.netflix.eureka.cluster.PeerEurekaNodes] - The replica size seems to be empty. Check the route 53 DNS Registry
[2024-03-07 13:19:27] [main] [INFO] [] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Finished initializing remote region registries. All known remote regions: []
[2024-03-07 13:19:27] [main] [INFO] [] [com.netflix.eureka.DefaultEurekaServerContext] - Initialized
[2024-03-07 13:19:27] [main] [INFO] [] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Registering application UNKNOWN with eureka with status UP
[2024-03-07 13:19:27] [main] [INFO] [] [org.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-8761"]
[2024-03-07 13:19:27] [Thread-9] [INFO] [] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - isAws returned false
[2024-03-07 13:19:27] [Thread-9] [INFO] [] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Initialized server context
[2024-03-07 13:19:27] [Thread-9] [INFO] [] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Got 1 instances from neighboring DS node
[2024-03-07 13:19:27] [Thread-9] [INFO] [] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Renew threshold is: 1
[2024-03-07 13:19:27] [Thread-9] [INFO] [] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] - Changing status to UP
[2024-03-07 13:19:27] [main] [INFO] [] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] - Tomcat started on port 8761 (http) with context path ''
[2024-03-07 13:19:27] [Thread-9] [INFO] [] [org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration] - Started Eureka Server
[2024-03-07 13:19:27] [main] [INFO] [] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] - Updating port to 8761
[2024-03-07 13:19:28] [main] [INFO] [] [org.springframework.cloud.commons.util.InetUtils] - Cannot determine local hostname
[2024-03-07 13:19:28] [main] [INFO] [] [com.example.discoveryserver.DiscoveryServerApplication] - Started DiscoveryServerApplication in 13.512 seconds (process running for 15.081)
[2024-03-07 13:19:29] [RMI TCP Connection(5)-192.168.56.1] [INFO] [] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-03-07 13:19:29] [RMI TCP Connection(5)-192.168.56.1] [INFO] [] [org.springframework.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
[2024-03-07 13:19:29] [RMI TCP Connection(5)-192.168.56.1] [INFO] [] [org.springframework.web.servlet.DispatcherServlet] - Completed initialization in 3 ms
[2024-03-07 13:20:27] [Eureka-EvictionTimer] [INFO] [] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 0ms
[2024-03-07 13:21:06] [http-nio-8761-exec-1] [WARN] [] [org.apache.catalina.util.SessionIdGeneratorBase] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [112] milliseconds.
[2024-03-07 13:21:27] [Eureka-EvictionTimer] [INFO] [] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 3ms
[2024-03-07 13:22:27] [Eureka-EvictionTimer] [INFO] [] [com.netflix.eureka.registry.AbstractInstanceRegistry] - Running the evict task with compensationTime 1ms
[2024-03-07 13:23:16] [SpringApplicationShutdownHook] [INFO] [] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] - Unregistering application UNKNOWN with eureka with status DOWN
[2024-03-07 13:23:16] [SpringApplicationShutdownHook] [INFO] [] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Shutting down Eureka Server..
[2024-03-07 13:23:16] [SpringApplicationShutdownHook] [INFO] [] [com.netflix.eureka.DefaultEurekaServerContext] - Shutting down ...
[2024-03-07 13:23:17] [SpringApplicationShutdownHook] [INFO] [] [com.netflix.eureka.DefaultEurekaServerContext] - Shut down
[2024-03-07 13:23:17] [SpringApplicationShutdownHook] [INFO] [] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] - Eureka Service is now shutdown...
[2024-03-07 13:23:17] [SpringApplicationShutdownHook] [INFO] [] [com.netflix.eureka.DefaultEurekaServerContext] - Shutting down ...
[2024-03-07 13:23:17] [SpringApplicationShutdownHook] [INFO] [] [com.netflix.eureka.DefaultEurekaServerContext] - Shut down
[2024-03-07 13:23:17] [SpringApplicationShutdownHook] [INFO] [] [com.netflix.discovery.DiscoveryClient] - Shutting down DiscoveryClient ...
[2024-03-07 13:23:17] [SpringApplicationShutdownHook] [INFO] [] [com.netflix.discovery.DiscoveryClient] - Completed shut down of DiscoveryClient
